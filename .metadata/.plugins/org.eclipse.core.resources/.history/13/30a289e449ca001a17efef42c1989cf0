package Ch19;

//해시코드를 오버라이딩 해서 사용해야 하는 이유//

class ObjtestA{
	int x;
	ObjtestA(){};
	public ObjtestA(int a) {
		this.x = a;
	}
}
class ObjtestB{
	int x=0;
	private static int  n=100;		//static변수 지정
	
	ObjtestB(){};
	public ObjtestB(int a) {
		this.x = a;
	}
	
	public int getx() {
		return this.x;
	}
	
	@Override
	public int hashCode() {	
		 return n++;
	}
	
	@Override
	public boolean equals(Object obj){		// equals 재정의
		if(obj instanceof ObjtestB){		// 형변환 가능여부 확인
			ObjtestB mi = (ObjtestB)obj;	// 다운캐스팅
			return this.x==mi.x;			// 객체 값 비교 
		}
		return false; 
	}
	
}
public class C06ObjectHashCode {

	public static void main(String[] args) {
		
		ObjtestA obj1 = new ObjtestA(12);
		ObjtestA obj2 = new ObjtestA(12);
		ObjtestA obj3 = new ObjtestA(56);
		
		System.out.println(obj1);		//자바 가상머신이 부여한 객체의 주소가저장
		System.out.println(obj2);		//자바 가상머신이 부여한 객체의 주소가저장
		System.out.println(obj3);		//자바 가상머신이 부여한 객체의 주소가저장
		System.out.println();
		System.out.println(System.identityHashCode(obj1));		//실제부여되는 고유식별해시코드
		System.out.println(System.identityHashCode(obj2));		//실제부여되는 고유식별해시코드	
		System.out.println(System.identityHashCode(obj3));		//실제부여되는 고유식별해시코드
		System.out.println();
		System.out.println(obj1.hashCode());	// 재정의가 가능한 해시코드(재지정하지 않을시 고유식별해시코드적용)
		System.out.println(obj2.hashCode());	// 재정의가 가능한 해시코드(재지정하지 않을시 고유식별해시코드적용)
		System.out.println(obj3.hashCode());	// 재정의가 가능한 해시코드(재지정하지 않을시 고유식별해시코드적용)
		System.out.println();
		System.out.println(obj1.equals(obj2));	//false(서로 다른 해시코드 적용)
		System.out.println(obj1.equals(obj3));	//false(서로 다른 해시코드 적용)
		System.out.println(obj2.equals(obj3));	//false(서로 다른 해시코드 적용)
		
		
		System.out.println("---------------------------------");
		ObjtestB obj4 = new ObjtestB(12);
		ObjtestB obj5 = new ObjtestB(12);
		ObjtestB obj6 = new ObjtestB(56);
		
		System.out.println(obj4);		//자바 가상머신이 부여한 객체의 주소가저장
		System.out.println(obj5);		//자바 가상머신이 부여한 객체의 주소가저장
		System.out.println(obj6);		//자바 가상머신이 부여한 객체의 주소가저장
		System.out.println();
		System.out.println(System.identityHashCode(obj4));		//실제부여되는 고유식별해시코드
		System.out.println(System.identityHashCode(obj5));		//실제부여되는 고유식별해시코드
		System.out.println(System.identityHashCode(obj6));		//실제부여되는 고유식별해시코드
		System.out.println();
//		System.out.println(obj4.hashCode());	//재정의한 hashCode 사용
//		System.out.println(obj5.hashCode());	//재정의한 hashCode 사용
//		System.out.println(obj6.hashCode());	//재정의한 hashCode 사용
		System.out.println(obj4);	//재정의한 hashCode 사용
		System.out.println(obj5);	//재정의한 hashCode 사용
		System.out.println(obj6);	//재정의한 hashCode 사용
		System.out.println();
		System.out.println(obj4.equals(obj5));	//true equals 재정의(객체 안 값비교)
		System.out.println(obj4.equals(obj6));	//false equals 재정의(객체 안 값비교)
		System.out.println(obj5.equals(obj6));	//false equals 재정의(객체 안 값비교)
		System.out.println();	
	}

}
